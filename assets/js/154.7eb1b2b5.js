(window.webpackJsonp=window.webpackJsonp||[]).push([[154],{590:function(t,s,a){"use strict";a.r(s);var n=a(2),p=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("本讲介绍 Go 程序性能分析的技能。")]),t._v(" "),s("p",[t._v("在业务需求初期，其体量往往比较小，即使做了性能优化，收益却并不大。随着业务量的上升，情况随之发生变化。哪怕某个重量级的业务需要几十上百台服务器支撑，哪怕性能优化只提升约 20% 的效益。"),s("strong",[t._v("收益不仅是节省下来的运行时间，更是硬件成本的投入和运行稳定性的保证")]),t._v("。这足以证明性能优化的重要性。")]),t._v(" "),s("p",[s("strong",[t._v("性能优化的原则遵循二八定律")]),t._v("。在进行优化时，想要尽善尽美往往是非常难的。我们"),s("strong",[t._v("应优先处理亟需优化的关键部分，如此便可获得大部分效益了")]),t._v("。剩下的部分很可能投入较多，但收益并不大。")]),t._v(" "),s("p",[t._v("Go 语言本身是面向服务端软件设计的，在 Go SDK 中自带了 pprof 性能分析工具。具体说来，有两个相关的包："),s("strong",[t._v("runtime/pprof 和 net/http/pprof。后者是对前者的封装，用于提供网络侧访问")]),t._v("。")]),t._v(" "),s("p",[t._v("本讲内容将从 CPU 和内存分析两方面介绍 pprof 的使用。")]),t._v(" "),s("h2",{attrs:{id:"生成运行报告"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成运行报告"}},[t._v("#")]),t._v(" 生成运行报告")]),t._v(" "),s("p",[t._v("假设现在有如下代码，它实现了对 10000 个随机整数的排序：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v("\n复制代码"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomIntCreator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Intn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" arr\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomIntCreator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("若要对其进行压力测试，观察其运行 100 次的稳定性和耗时情况，仅需如下调用即可：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v("\n复制代码"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("OpenFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cpu.pprof"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("O_CREATE"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("O_RDWR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0644")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   pprof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("StartCPUProfile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" pprof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("StopCPUProfile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n💡 提示：压力测试是非常实用的测试方法，它能模拟高并发、大流量等情况，从而衡量程序运行的稳定性和正确性。某些问题可能尽在运行压力较大时才会显现，某些性能问题在程序反复执行后更加明显。\n")])])]),s("p",[t._v("如上代码所示，main() 函数中创建了 cpu.pprof 文件并将返回的 *File 值赋给变量 f，紧接着调用 pprof.StartCPUProfile() 函数传入 f 变量，开始执行 CPU 运行分析。")]),t._v(" "),s("p",[t._v("在之后使用断言关闭文件，调用 pprof.StopCPUProfile() 停止 CPU 运行分析。最后是循环 100 次调用 sort() 函数，进行测试。程序运行时，首先会尝试打开 cpu.pprof 文件，当该文件不存在时则会创建它。紧接着便会开始 CPU 分析。随后开始 100 次执行 sort() 函数。执行后停止 CPU 分析，关闭文件。")]),t._v(" "),s("p",[t._v("运行上述代码，稍等片刻，控制台便会输出：")]),t._v(" "),s("blockquote",[s("p",[t._v("Process finished with the exit code 0")])]),t._v(" "),s("p",[t._v("表示程序正常退出，结束运行。此时来到项目根目录下，可以看到 cpu.pprof 文件。"),s("strong",[t._v("文件中记录着从开始 CPU 分析到停止 CPU 分析之间的函数耗时情况")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"交互式终端视图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#交互式终端视图"}},[t._v("#")]),t._v(" 交互式终端视图")]),t._v(" "),s("p",[t._v("打开终端，定位到项目根目录下，执行：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("shell\n复制代码go tool pprof cpu.pprof\n")])])]),s("p",[t._v("便可启动交互式终端视图，获取文件中保存的各种信息了，运行结果示例如下：")]),t._v(" "),s("blockquote",[s("p",[t._v("Type: cpu")]),t._v(" "),s("p",[t._v("Time: May 18, 2022 at 10:11am (CST)")]),t._v(" "),s("p",[t._v("Duration: 12.73s, Total samples = 8.28s (65.03%)")]),t._v(" "),s("p",[t._v('Entering interactive mode (type "help" for commands, "o" for options)')]),t._v(" "),s("p",[t._v("(pprof)")])]),t._v(" "),s("p",[t._v("可以看到，上述文字说明：测试类型是 CPU，测试时间是 2022 年 5 月 18 日 早上 10:11，程序运行总时长是 12.73 秒，测试采样时间是 8.28 秒，占总时长的 65.03%。倒数第 2 行是命令说明：输入 help 显示帮助信息，列出支持的命令；输入 o 进行选项设置。最后一行是等待用户输入行。")]),t._v(" "),s("p",[t._v("较为常用的是 top 命令，它能列出函数的执行时长，当我们成功进入交互式终端，并执行 top 命令后，可以看到如下结果输出：")]),t._v(" "),s("blockquote",[s("p",[t._v("Showing nodes accounting for 8.14s, 98.31% of 8.28s total")]),t._v(" "),s("p",[t._v("Dropped 29 nodes (cum <= 0.04s)")]),t._v(" "),s("p",[t._v("Showing top 10 nodes out of 18")]),t._v(" "),s("p",[t._v("flat flat% sum% cum cum%")]),t._v(" "),s("p",[t._v("7.97s 96.26% 96.26% 8.06s 97.34% main.sort")]),t._v(" "),s("p",[t._v("0.09s 1.09% 97.34% 0.09s 1.09% runtime.asyncPreempt")]),t._v(" "),s("p",[t._v("0.05s 0.6% 97.95% 0.05s 0.6% runtime.stdcall1")]),t._v(" "),s("p",[t._v("0.02s 0.24% 98.19% 0.10s 1.21% runtime.findrunnable")]),t._v(" "),s("p",[t._v("0.01s 0.12% 98.31% 0.05s 0.6% runtime.wakep")]),t._v(" "),s("p",[t._v("0 0% 98.31% 8.06s 97.34% main.main")]),t._v(" "),s("p",[t._v("0 0% 98.31% 0.05s 0.6% runtime.bgscavenge.func2")]),t._v(" "),s("p",[t._v("0 0% 98.31% 0.05s 0.6% runtime.checkTimers")]),t._v(" "),s("p",[t._v("0 0% 98.31% 8.06s 97.34% runtime.main")]),t._v(" "),s("p",[t._v("0 0% 98.31% 0.15s 1.81% runtime.mcall")])]),t._v(" "),s("p",[t._v("我们从上往下对上述输出进行解读：")]),t._v(" "),s("ul",[s("li",[t._v("第 1 行的意思是以下信息显示了总计耗时 8.14 秒的函数执行情况，占总耗时的 98.31%。")]),t._v(" "),s("li",[t._v("第 2 行的意思是被省略的执行函数总计个数：29，它们的总耗时小于等于 0.04 秒。")]),t._v(" "),s("li",[t._v("第 3 行的意思是以下表格列出了被执行的 18 个函数，以耗时从长到短排序，前 10 个函数。")])]),t._v(" "),s("p",[t._v("显然，sort() 函数耗时 7.97秒，自身占比 96.26%。其次还可以找到 main() 函数，其中并没有什么实际的逻辑，但 sort() 函数在其中，所以总时长是 8.06 秒，累计占比 98.31%，但自身时长和占比都是 0。")]),t._v(" "),s("p",[t._v("表格中的 5 列数据的含义如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("列名")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("flat")]),t._v(" "),s("td",[t._v("函数的执行耗时")])]),t._v(" "),s("tr",[s("td",[t._v("flat%")]),t._v(" "),s("td",[t._v("函数的执行耗时占 CPU 总时间的比例")])]),t._v(" "),s("tr",[s("td",[t._v("sum%")]),t._v(" "),s("td",[t._v("前面每一行的函数的执行耗时占比的总和")])]),t._v(" "),s("tr",[s("td",[t._v("cum")]),t._v(" "),s("td",[t._v("该函数加上该函数调用的函数的总耗时")])]),t._v(" "),s("tr",[s("td",[t._v("cum%")]),t._v(" "),s("td",[t._v("该函数加上该函数调用的函数的总耗时占 CPU 总时间的比例")])])])]),t._v(" "),s("p",[t._v("可见，"),s("strong",[t._v("通过在代码的特定位置启动和停止 CPU 分析，可以很好地测量被其包含的代码运行状况。非常适用于一次运行的情况，即只跑一次程序，手动采集性能数据")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"web-可视化视图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-可视化视图"}},[t._v("#")]),t._v(" Web 可视化视图")]),t._v(" "),s("p",[t._v("Web 可视化视图提供了查看性能分析结果的另一种方式，它更加直观。特别是对于函数调用的层次结构而言，看上去会更加方便。")]),t._v(" "),s("p",[t._v("对于本例，在进入终端交互视图后，"),s("strong",[t._v("执行 web 命令")]),t._v("，便会打开系统默认的浏览器，显示如下内容：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/64177e33a7154240ac944e2188d51c4e~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp?",alt:"image-20220518111057034.png"}})]),t._v(" "),s("p",[t._v("为了方便查看，网页支持"),s("strong",[t._v("使用鼠标左键拖拽视图显示的内容")]),t._v("，也支持"),s("strong",[t._v("通过滚轮进行视图缩放")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("💡 提示：正常情况下，上图所示的分析结果与终端输出的结果相同。在编写本讲时，我运行了两次，所以结果略有不同。\n")])])]),s("h2",{attrs:{id:"实时性能分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实时性能分析"}},[t._v("#")]),t._v(" 实时性能分析")]),t._v(" "),s("p",[t._v("正如前文中所述：在代码特定的位置进行 CPU 检测可以达到只跑一次程序，便能采集性能数据的情况。但现实中往往还需要"),s("strong",[t._v("实时观测内存的占用情况")]),t._v("，此时，net/http/pprof 包就派上用场了。")]),t._v(" "),s("p",[t._v("还是对随机数排序的案例，将 main() 函数稍加修改，便能通过 Web 页观测内存使用情况了，具体如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v("\n复制代码"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net/http/pprof"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ListenAndServe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1:9090"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"运行第%d次\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("可以看到，程序一上来启动了一个协程，目的是开启本地 http 服务器，响应 9090 端口。然后便是 for 循环了，请大家特别留意 for 循环的终止条件，此处改为 i>=0。显然这个循环将一直持续下去，直到程序被强行停止。循环体的内容也做了一些调整，即每隔 1 秒执行一次随机数的生成和排序，并输出运行次数。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("❗️ 注意：通过 Web 观察 pprof 实时内存测试结果，必须导入 net/http/pprof 包。\n")])])]),s("p",[t._v("运行上述代码，可以看到控制台有稳定的文字输出。然后适用浏览器打开："),s("a",{attrs:{href:"https://link.juejin.cn/?target=http%3A%2F%2Flocalhost%3A9090%2Fdebug%2Fpprof%2F",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:9090/debug/pprof/"),s("OutboundLink")],1),t._v(" ，可以看到如下页面：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2d96100c4ce947af868e00bf58545fe6~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp?",alt:"image-20220518112555878.png"}})]),t._v(" "),s("p",[t._v("我们可以点击上方的链接进入某个具体的项目查看详情。以下是我在程序刚开始运行和循环体执行了 10 次后的内存占用概览信息：")]),t._v(" "),s("p",[t._v("程序刚开始运行：")]),t._v(" "),s("blockquote",[s("p",[t._v("# runtime.MemStats")]),t._v(" "),s("p",[t._v("# Alloc = 1123208")]),t._v(" "),s("p",[t._v("# TotalAlloc = 1123208")]),t._v(" "),s("p",[t._v("# Sys = 8407496")]),t._v(" "),s("p",[t._v("# Lookups = 0")]),t._v(" "),s("p",[t._v("# Mallocs = 2138")]),t._v(" "),s("p",[t._v("# Frees = 143")]),t._v(" "),s("p",[t._v("# HeapAlloc = 1123208")]),t._v(" "),s("p",[t._v("# HeapSys = 4030464")]),t._v(" "),s("p",[t._v("# HeapIdle = 1818624")]),t._v(" "),s("p",[t._v("# HeapInuse = 2211840")]),t._v(" "),s("p",[t._v("# HeapReleased = 1818624")]),t._v(" "),s("p",[t._v("# HeapObjects = 1995")]),t._v(" "),s("p",[t._v("# Stack = 163840 / 163840")]),t._v(" "),s("p",[t._v("# MSpan = 37400 / 49152")]),t._v(" "),s("p",[t._v("# MCache = 4672 / 16384")]),t._v(" "),s("p",[t._v("# BuckHashSys = 1447574")]),t._v(" "),s("p",[t._v("# GCSys = 1931744")]),t._v(" "),s("p",[t._v("# OtherSys = 768338")]),t._v(" "),s("p",[t._v("# NextGC = 4473924")]),t._v(" "),s("p",[t._v("# LastGC = 0")])]),t._v(" "),s("p",[t._v("循环体执行约 10 次后：")]),t._v(" "),s("blockquote",[s("p",[t._v("# runtime.MemStats")]),t._v(" "),s("p",[t._v("# Alloc = 1130216")]),t._v(" "),s("p",[t._v("# TotalAlloc = 4646560")]),t._v(" "),s("p",[t._v("# Sys = 13588888")]),t._v(" "),s("p",[t._v("# Lookups = 0")]),t._v(" "),s("p",[t._v("# Mallocs = 2606")]),t._v(" "),s("p",[t._v("# Frees = 1442")]),t._v(" "),s("p",[t._v("# HeapAlloc = 1130216")]),t._v(" "),s("p",[t._v("# HeapSys = 8192000")]),t._v(" "),s("p",[t._v("# HeapIdle = 6242304")]),t._v(" "),s("p",[t._v("# HeapInuse = 1949696")]),t._v(" "),s("p",[t._v("# HeapReleased = 3850240")]),t._v(" "),s("p",[t._v("# HeapObjects = 1164")]),t._v(" "),s("p",[t._v("# Stack = 196608/ 196608")]),t._v(" "),s("p",[t._v("# MSpan = 46104/ 49152")]),t._v(" "),s("p",[t._v("# MCache = 4672/ 16384")]),t._v(" "),s("p",[t._v("# BuckHashSys = 1448454")]),t._v(" "),s("p",[t._v("# GCSys = 2638432")]),t._v(" "),s("p",[t._v("# OtherSys = 1047858")]),t._v(" "),s("p",[t._v("# NextGC = 4194304")]),t._v(" "),s("p",[t._v("# LastGC = 1652842675951237400")])]),t._v(" "),s("p",[t._v("需要特别说明的是 trace，当我们点击 trace 后，会下载到一个文件。这个文件的名称默认为 trace。通过在终端执行：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("shell\n复制代码go tool trace trace\n")])])]),s("p",[t._v("这句命令中，第 2 个trace 指文件名。执行后，可以观测到完整的跟踪等信息，这些信息同样通过浏览器查看：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7e4e48f651594c54b368c4cc48b2be33~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp?",alt:"image-20220518113304636.png"}})]),t._v(" "),s("p",[t._v("如上图所示，在完整的 trace 文件中包含了众多实用的状态数据。比如，当我们点击 View Trace 时，可以看到具体的函数调用时长等信息，如下图所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/487aface589c4500a079f2682ce4ebc2~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp?",alt:"image-20220518114238745.png"}})]),t._v(" "),s("h2",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v("🎉 恭喜，您完成了全部课程的学习！")]),t._v(" "),s("p",[t._v("📌 以下是本次课程的重点内容总结：")]),t._v(" "),s("ol",[s("li",[t._v("Go 程序性能分析工具的使用")])]),t._v(" "),s("p",[t._v("正如本讲开头所述：进行性能优化的收益不仅是节省下来的运行时间，更是硬件成本的投入和运行稳定性的保证。在进行性能优化时，应遵循二八原则，首要任务是解决最影响性能的问题点。")]),t._v(" "),s("p",[t._v("Go SDK 中包含了进行性能分析的工具：pprof。本讲主要介绍了使用它来进行 CPU 和内存的性能分析。此外，pprof 还能获取锁竞争状态、线程/协程创建情况等数据，这里就不再一一赘述了。")])])}),[],!1,null,null,null);s.default=p.exports}}]);