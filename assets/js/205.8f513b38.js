(window.webpackJsonp=window.webpackJsonp||[]).push([[205],{641:function(t,s,n){"use strict";n.r(s);var a=n(2),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("前端方案会"),s("strong",[t._v("把所有路由信息在前端配置")]),t._v("，通过路由守卫要求用户登录，用户"),s("strong",[t._v("登录后根据角色过滤出路由表")]),t._v("。比如我会配置一个"),s("code",[t._v("asyncRoutes")]),t._v("数组，需要认证的页面在其路由的"),s("code",[t._v("meta")]),t._v("中添加一个"),s("code",[t._v("roles")]),t._v("字段，等获取用户角色之后取两者的交集，若结果不为空则说明可以访问。此过滤过程结束，剩下的路由就是该用户能访问的页面，"),s("strong",[t._v("最后通过"),s("code",[t._v("router.addRoutes(accessRoutes)")]),t._v("方式动态添加路由")]),t._v("即可。")]),t._v(" "),s("p",[t._v("后端方案会"),s("strong",[t._v("把所有页面路由信息存在数据库")]),t._v("中，用户登录的时候根据其角色"),s("strong",[t._v("查询得到其能访问的所有页面路由信息")]),t._v("返回给前端，前端"),s("strong",[t._v("再通过"),s("code",[t._v("addRoutes")]),t._v("动态添加路由")]),t._v("信息")]),t._v(" "),s("p",[t._v("按钮权限的控制通常会"),s("strong",[t._v("实现一个指令")]),t._v("，例如"),s("code",[t._v("v-permission")]),t._v("，"),s("strong",[t._v("将按钮要求角色通过值传给v-permission指令")]),t._v("，在指令的"),s("code",[t._v("moutned")]),t._v("钩子中可以"),s("strong",[t._v("判断当前用户角色和按钮是否存在交集")]),t._v("，有则保留按钮，无则移除按钮。")]),t._v(" "),s("p",[s("strong",[t._v("类似"),s("code",[t._v("Tabs")]),t._v("这类组件能不能使用"),s("code",[t._v("v-permission")]),t._v("指令实现按钮权限控制？")])]),t._v(" "),s("p",[t._v("使用v-if")]),t._v(" "),s("p",[t._v("路由拦截鉴权的方法：")]),t._v(" "),s("p",[t._v("1、路由拦截：单纯给路由加字段标识符，通过路由拦截实现")]),t._v(" "),s("p",[t._v("2、动态路由：通过路由的拆分另外需要后端的配合去实现的动态路由配置")]),t._v(" "),s("p",[t._v("路由拦截实现方式比较简单，只需要简单的在router.beforeEach中根据路由配置信息过滤页面是否有权限前往改组件，若相对于的权限不够则不前往相应的组件。")]),t._v(" "),s("p",[t._v("动态路由实现相对比较复杂，并且需要后端的配合，本质是路由配置表分成两部分，相应的不同用户登录的时候，是根据用户权限信息过滤筛选除路由配置表，动态添加，而用户没有权限的部分则不渲染。")]),t._v(" "),s("p",[t._v("动态路由的3个文件")]),t._v(" "),s("h4",{attrs:{id:"router-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#router-js"}},[t._v("#")]),t._v(" router.js")]),t._v(" "),s("blockquote",[s("p",[t._v("router.js的路由配置表可以分为两部分，公共路由以及动态权限路由，动态权限路由可以放在前端，鉴权的时候前端自己进行数组的过滤，也可以放在后端过滤")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("// 配置表都放在前端的\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" Vue from "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" Router from "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue-router'")]),t._v("\n\nVue.use"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" const defauleRoute "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" //固定部分权限的数组，所有用户都能访问的路由\n\t｛\n\t\tpath:"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/login'")]),t._v(",\n\t\tcomponent:aa\n\t｝,\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" const  asyncRoute "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" //动态配置的路由表，工作之前需要过滤\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tpath:"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/order'")]),t._v(",\n\t\tname:"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'order'")]),t._v(",\n\t\tcomponent:aa,\n\t\tmeta:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tsystem:"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'order'")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tpath:"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/roles'")]),t._v(",\n\t\tname:"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'roles'")]),t._v(",\n\t\tcomponent:aa,\n\t\tmeta:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tsystem:"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'roles'")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n//注册路由工作表\nconst createRouter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" new Router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t  // mode: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'history'")]),t._v(", // require "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" support\n\t  scrollBehavior: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" y: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(",\n\t  routes: constantRoutes\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconst router "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" createRouter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n//重置路由工作表，退出登录的时候需要调用此方法\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("resetRouter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  const newRouter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" createRouter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  router.matcher "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newRouter.matcher \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" default router\n")])])]),s("h4",{attrs:{id:"permission-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#permission-js"}},[t._v("#")]),t._v(" permission.js")]),t._v(" "),s("p",[t._v("主要是做全局的路由拦截，以及路由根据用户权限动态过滤等功能")]),t._v(" "),s("p",[t._v("主要涉及：什么时候去处理动态路由、什么条件去处理路由")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" router from "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./router'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" store from "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./store'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" getToken "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" from "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/utils/auth'")]),t._v(" // 自定义封装存取token的方法\n\nRoute.beforeEach"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v("to,from,next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t//取token，判断用户是否已登录\n\tconst  hasToken "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" getToken"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\tif"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hasToken "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t//判断用户已登录\n\t\tif（to.path "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/login"')]),t._v("）"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t/**\n\t\t\t*用户已经登陆，但是还路由到login页面，这代表用户已经执行了退出登录的操\n\t\t\t*作，所以这个地方可以清一下token之类的，或者自定义写一些逻辑\n\t\t\t*/\n\t\t\tnext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("else"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t/**\n\t\t*这里是已经登录或者点击了登录按钮，token已经存入localstorage，但是但是不路\n\t\t*由到login的情况如果没有路由到/login，那么就直接让他放行就行，在这里面我处\n\t\t*理一些东西，就是用户既然已经登陆，并且可以直接放行，那么我们放\n\t\t*行之前，在这个地方需要做一些逻辑，就是判断用户的权限，然后根\n\t\t*据用户的权限，把我们的动态配置的路由表中符合他权限的那几条路\n\t\t*由给过滤出来，然后插入到路由配置表中去使用\n\t\t*\n\t\t*那么就涉及到两个问题：\n\t\t*1:什么时候去处理动态路由（登陆之后，进入到首页之前，也就\n\t\t*是next之前）\n\t\t*2:什么条件处理动态路由\n\t\t*/\n\t\t\n\t\t/**\n\t\t*这地方可以先判断一下store中的用户权限列表长度是否为0，若长度为0，则代表用户\n\t\t*是刚点击了登录按钮，但是还没有进入到页面，这时候需要再去做一些权限过滤之类的\t\n\t\t*操作如果长度不为0代表鉴权流程都没问题了，直接前往对应的组件就行\n\t\t*这一步主要是为了防止重复过滤数组，节约性能\n\t\t*/\n\t\t\tif"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("store.getters.roles.length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tnext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("else"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t//代码如果走到了这个地方，代表用户是已登录。并且鉴权流程还没走，\n\t\t\t\t//那么在这地方就需要去走鉴权流程\n\t\t\t\tstore.dispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'getRoles'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".then"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t//这个地方的res是第三步那个地方的peomise中的resolve传\n\t\t\t\t\t//过来的，也就是权限信息的那个数组\n\t\t\t\t\tstore.dispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'createRouters'")]),t._v(",res.data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\t\t.then"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t//这里是调用store创造动态路由的那个函数,这个地方可以把那\n\t\t\t\t\t\t//个权限数组传到这个函数内部，或者不在这里传，这个\n\t\t\t\t\t\t//函数内部直接去取自己state里面的roles的值也是一样的\n\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v("  addRouters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" store.getters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'addRouters'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v("  allRouters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" store.getters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'allRouters'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t\t\t\t\t\t//添加动态路由部分到工作路由\n\t\t\t\t\t\trouter.addRoutes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("accessRoutes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\t\t\t//vue/cli4及之后的版本，addRoutes被废弃，取而代之的是\n\t\t\t\t\t\t//addRoute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'paramentsName'")]),t._v(",route对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("或者\t\t\t\n\t\t\t\t\t\t//addRoute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("route对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(",注意，传进去的参数不再是一个数组，\n\t\t\t\t\t\t//而是每一条路由对象，如果套添加多条，那么就需要遍历添加\n\t\t\t\t\t\t//如果是传两个参数的写法，那么第一个参数是父路由的名字\n\t\t\t\t\t\t//这样就是把这条路由加入到父路由的children里面去\t\t\n\n\t\t\t\t\t\t//前往拦截的页面\n          \t\t\t\tnext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".to, replace: "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          \t\t\t\t//addRoute添加完路由之后一定要通过这种方式做路由跳转，\n          \t\t\t\t//不然可能会导致addRoute之后的第一次跳到addRoutes添加的页\n          \t\t\t\t//面的时候，可能是空白页面\n          \t\t\t\t\n          \t\t\t\t//"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("：作用：把整个路由对象传过去做路由跳转，包括带上\n          \t\t\t\t//components那些，这样就能保证第一次就能渲染到这个页面\n          \t\t\t\t//replace:true:本次路由记录不被浏览器所记录\n\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t/**这里是处理没有token的情况，也就是说这时候用户还没有登陆，那\n\t\t*如果没用户登录，那么判断用户是不是去登录页面，如果是登录\n\t\t*页面，就直接放行，如果没登陆就想去访问主页那种页面，就让\n\t\t*他重定向到登录页面\n\t\t*/\n\t\tif（to.path "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/login'")]),t._v("）"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t//这地方可以判断的仔细一点，不一定是去login的时候再让他直接放行，而是\n\t\t\t//前往所有公共组件的时候，都直接让他放行\n\t\t\tnext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("else"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tnext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/login'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("addRoutes动态添加路由两个注意点：")]),t._v(" "),s("strong",[t._v("addRoutes:")]),t._v(" Vue/cli4及之后的版本，addRoutes被废弃，取而代之是addRoute('parentName',Route)或者addRoute(route对象)，如果是传两个参数的写法，那么第一个参数是父路由的name这样就是把这条路由加入到父路由的children里面去，如果是要动态添加多天路由，就需要通过遍历的方式了  "),s("strong",[t._v("next({ ...to, replace: true }):")]),t._v(" addRoute首次添加完路由之后的路由跳转一定要通过这种方式做路由跳转，不然可能会导致addRoute之后的第一次跳到addRoutes添加的页面的时候，可能是空白页面")]),t._v(" "),s("p",[t._v("{...to}：作用：把整个路由对象传过去做路由跳转，包括带上 components那些，这样就能保证第一次前往addRoutes动态添加的就能渲染到这个页面")]),t._v(" "),s("p",[t._v("replace:true:本次路由记录不被浏览器所记录")]),t._v(" "),s("h4",{attrs:{id:"store-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#store-js"}},[t._v("#")]),t._v(" store.js")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("//在api文件夹中定义一个获取此用户的权限的接口，并且在这个actions中调用\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" getUserRole "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" from "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../api/getRoles"')]),t._v("  //获取权限的接口\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("logout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" from "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../api/user'")]),t._v("   //用户退出登录的接口\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" resetRouter "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" from "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./router'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" removeToken "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" from "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/utils/auth'")]),t._v(" // 自定义封装清除token的方法\n\n//这个是过滤数组的方法，如果路由表是多层嵌套的，那么可以递归调用这个方法去过滤数组\n//function hasPermission"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("roles, route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n//  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("route.meta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" route.meta.roles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n//    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" roles.some"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("role "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" route.meta.roles.includes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("role"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v("\n//  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n//    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n//  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n//"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n//export "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" filterAsyncRoutes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("routes, roles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n//  const res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n//  routes.forEach"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("route "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n//    const tmp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".route "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n//    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hasPermission"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("roles, tmp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n//      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmp.children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n//        tmp.children "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" filterAsyncRoutes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmp.children, roles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n//      res.push"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n//  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//\n//  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" res\n//"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n//引入默认路由以及动态路由\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" defauleRoute , asyncRouter "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  from "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/router'")]),t._v("\nconst state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\troles："),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    //掉接口拿到的权限列表，假设数据格式为："),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"roles"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n\tallRouters: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", //这个是全部整合以后，最终要工作的路由\n\taddRouters: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",//这个是根据权限动态匹配过滤出来部分的路由\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t  \nconst getters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t/**把state中的roles存入到这个getters中，那么其他获取这个getters中的\n\t*roles的地方，只要原本的roles发生改变，其他地方的这个roles也就会发生\n\t*改变了，这个相当于是computed计算属性\n\t*/\n\troles:state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" state.roles\n\tallRouters:state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" state.allRouters\n\taddRouters:state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" state.addRouters\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconst mutations："),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t/**在下面的actions里面通过commit把权限信息的数组提交到这个地方，然后\n\t*这个地方把数组提交到state的roles\n\t*/\n\tSetRoute（state,router）\n\t\t//这个地方的router就是根据用户权限，过滤出来的路由表\n\t\tstate.allRouters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" defauleRoute.concat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tstate.addRouters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" router\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t//把路由权限数组存储到state\n\tsetRoles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state,value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tstate.roles "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconst actions："),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t//写一个获取当前登陆角色权限的请求，比如"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/order"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"roles"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("，如果请求回\n\t//来的是这样的，那么就代表这个角色的权限就是可以访问 order路由以及\n\t//roles路由\n\t\n\t//获取权限信息可能有两种情况：除了下面这种权限信息是一个单独的接口，\n\t//权限信息也可能跟着用户登陆的接口就一并返回\n\t//获取当前用户的权限信息，并且存入到state中，这个权限信息，可能跟后\n\t//端在沟通的时候，他不会单独写成一个接口给你去请求，而是你在登陆请求\n\t//的时候就把用户信息和这个此用户的权限信息都一次性返回给你了，那就在\n\t//用户登陆的时候就把这个权限信息存入到这个state中，也一\n\t//样的，目的就是要把权限信息的数组存入到state中就行\n\t//获取roles权限方法\n\tgetRoles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("commit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" new Promise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolve,reject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t//调用获取用户权限接口\n\t\t\tgetUserRole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".then"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t//这里返回的数据应该是一个权限信息的数组，如:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"roles"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t\t\t//把权限信息通过mutations存入到state\n\t\t\t\tcommit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setRoles'")]),t._v(",res.data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\tresolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res.data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t//根据权限过滤数组配置表的方法\n\tcreateRouters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" , data "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" new Promise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v("resolve,reject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" addRouters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n\t\t\tif（data.includes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin"')]),t._v("）"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\taddRouters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" asyncRouter\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("else"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t//项目开发中路由数组可能是多层嵌套，那么这地方需要用上面自定义的方\t\n\t\t\t\t//法通过递归的方式去过滤，此demo就只按一层数组处理\n\t\t\t\t//（filterAsyncRoutes）方法\n\t\t\t\taddRouters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" asyncRouter.filter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\tif"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data.includes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item.meta.system"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t   \t"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" item\n\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\n\t\t\t\n\t\t\t//把这个匹配出来的权限路由传到mutations中，让mutations\n\t\t\t//把这个匹配出来的路由存入到state\n\t\t\tcommit."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SetRoute"')]),t._v(",addRouters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tresolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  //这个地方要调用一下这个resolve，这样外面访可以通过\n\t\t\t\t\t   //.then拿到数组过滤成功的回调\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\tlogout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" new Promise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v("resolve, reject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t      logout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".then"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t        removeToken"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // must remove  token  first\n\t        resetRouter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t        commit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setRoles'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t        commit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SetRoute'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t        resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".catch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t        reject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" default "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tstate,\n\tgetters,\n\tmutations,\n\tactions\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);